3.
merge :: Ord a => [a] -> [a] -> [a]
merge [] ys = ys
merge xs [] = xs
merge (x:xs) (y:ys) 	| x <= y 	= x : merge xs 	(y:ys)
		       	| otherwise 	= y : merge (x:xs) 	ys

4.
halve :: [a] -> ([a],[a])
halve xs = splitAt (length xs `div` 2) xs

msort :: Ord a => [a] -> [a]
msort []   	= []
msort [x] 	= [x]
msort xs 	= merge (msort lh) (msort rh)
		where
			(lh, rh) = halve xs
